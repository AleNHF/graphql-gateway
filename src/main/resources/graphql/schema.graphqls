type User {
    id: ID
    username: String
    email: String
    password: String
    role: String
}

type LoginResponse {
    id: ID!
    token: String!
    username: String!
    email: String!
    role: String!
}

type Customer {
    id: ID!
    name: String
    phone: String
    email: String
}

type Supplier {
    id: ID!
    name: String
    email: String
    phone: String
    address: String
}

type Sale {
    id: Int!
    date: String
    total: Float!
    payment_type: String
    quantity_items: Int
    customer_id: Int
    user_id: Int
    details: [SaleDetail!]!
}

type SaleDetail {
    id: Int!
    quantity: Int!
    price: Float!
    total: Float!
    product_id: String
    sale_id: String
}

type Refund {
    id: Int!
    date: String!
    reason: String!
    quantity: Int!
    customer_id: String
    detail_sale: SaleDetail!
}

type Product {
    id: Int!
    code: String!
    name: String!
    description: String!
    price: Float!
    stock: Int!
    image: String
    brand_id: Int
    size_id: Int
    color_id: Int
    model_id: Int
}

type Promotion {
    id: Int!
    start_date: String
    end_date: String
    description: String
}

type Purchase {
    id: Int!
    date: String
    total: Float!
    supplier_id: String
    details: [PurchaseDetail]
}

type PurchaseDetail {
    id: Int!
    quantity: Int!
    price: Float!
    total: Float!
    product_id: String
    purchase_id: String
}

type Brand {
    id: ID!
    name: String
}

type Size {
    id: ID!
    name: String
}

type Color {
    id: ID!
    name: String
}

type Model {
    id: ID!
    name: String
}

type Query {
    users: [User]
    user(id: ID!): User
    customers: [Customer]
    customer(id: ID!): Customer
    suppliers: [Supplier]
    supplier(id: ID!): Supplier
    sales: [Sale]
    sale(id: ID!): Sale
    refunds: [Refund]
    refund(id: ID!): Refund
    products: [Product]
    product(id: ID!): Product
    purchases: [Purchase]
    purchase(id: ID!): Purchase
    brands: [Brand]
    brand(id: ID!): Brand
    colors: [Color]
    color(id: ID!): Color
    sizes: [Size]
    size(id: ID!): Size
    models: [Model]
    model(id: ID!): Model
    promotions: [Promotion]
    promotion(id: ID!): Promotion
    salesByCustomer(customerId: Int!):  [Sale!]
}

input SaleDetailInput {
    product_id: Int
    quantity: Int
    price: Float
}

input CreateSaleInput {
    date: String!
    payment_type: String!
    customer_id: Int!
    user_id: Int!
    details: [SaleDetailInput!]!
}

input UpdateSaleInput {
    date: String
    details: [SaleDetailInput]
}

input CreateRefundInput {
    date: String!
    reason: String!
    quantity: Int!
    customer_id: Int!
    detail_sale_id: Int!
}

input UpdateRefundInput {
    date: String
    reason: String
    quantity: Int
    customer_id: Int
}

input CreateProductInput {
    code: String
    name: String!
    description: String!
    price: Float!
    stock: Int!
    image: String
    brand_id: Int
    size_id: Int
    color_id: Int
    model_id: Int
}

input UpdateProductInput {
    code: String
    name: String
    description: String
    price: Float
    stock: Int
    image: String
    brand_id: Int
    size_id: Int
    color_id: Int
    model_id: Int
}

input PurchaseDetailInput {
    product_id: Int
    purchase_id: Int
    quantity: Int
    price: Float
    total: Float
}

input CreatePurchaseInput {
    date: String!
    total: Float!
    supplier_id: Int!
    details: [PurchaseDetailInput!]!
}

input UpdatePurchaseInput {
    date: String
    total: Float
    supplier_id: Int
    details: [PurchaseDetailInput!]
}

type Mutation {
    createUser(username: String!, email: String!, password: String!, role: String!): User
    updateUser(id: ID!, username: String, email: String, password: String, role: String): User
    deleteUser(id: ID!): Boolean
    loginUser(username: String!, password: String!): LoginResponse

    createCustomer(name: String!, phone: String!, email: String!): Customer
    updateCustomer(id: ID!, name: String, phone: String, email: String): Customer
    deleteCustomer(id: ID!): Boolean

    createSupplier(name: String!, email: String!, phone: String!, address: String!, company: String!): Supplier
    updateSupplier(id: ID!, name: String, email: String, phone: String, address: String, company: String): Supplier
    deleteSupplier(id: ID!): Boolean

    createSale(input: CreateSaleInput): Sale!
    updateSale(id: ID!, input: UpdateSaleInput): Sale!
    deleteSale(id: ID!): Boolean

    createRefund(input: CreateRefundInput): Refund!
    updateRefund(id: ID!, input: UpdateRefundInput): Refund!
    deleteRefund(id: ID!): Boolean

    createProduct(input: CreateProductInput): Product!
    updateProduct(id: ID!, input: UpdateProductInput): Product!
    deleteProduct(id: ID!): Boolean

    createPurchase(input: CreatePurchaseInput): Purchase!
    updatePurchase(id: ID!, input: UpdatePurchaseInput): Purchase!
    deletePurchase(id: ID!): Boolean
}
